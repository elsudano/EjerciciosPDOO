require 'vagrant-digitalocean'

VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
    config.vm.define "local" do |config|
        config.vm.box = "virtualbox"
        config.vm.box="generic/fedora29"
        # Para que esta linea funcione es necesario instalar el plugin de vagrant
        # Con esta linea sincronizamos el directorio de desarrollo con la maquina virtuaÄº
        # vagrant plugin install vagrant-vbguest
        config.vm.synced_folder 'src/', '/home/vagrant/src', SharedFoldersEnableSymlinksCreate: false#, disabled: true
        config.vm.communicator = "ssh"
        config.ssh.username = "vagrant"
        config.ssh.password = "vagrant"
        config.vm.hostname = "develop-machine"
        config.vm.network "forwarded_port", guest: 5000, host: 8080
    end
    config.vm.define "remote" do |config|
        config.vm.provider :digital_ocean do |provider, override|
            override.ssh.private_key_path = '~/.ssh/id_rsa_deploying'
            override.vm.box = "digital_ocean"
            override.vm.box_url = "https://github.com/devopsgroup-io/vagrant-digitalocean/raw/master/box/digital_ocean.box"
            override.nfs.functional = false
            provider.ssh_key_name  = 'vagrant-dev'
            provider.private_networking = false
            provider.backups_enabled = false
            provider.monitoring = false
            provider.setup = false
            provider.token = ENV['DO_TOKEN']
            provider.image = 'fedora-28-x64'
            provider.region = 'lon1'
            provider.size = 's-1vcpu-1gb'
#            config.vm.synced_folder "bin", "/usr/local/bin", type: "rsync",
#            rsync__args: ["--verbose", "--rsync-path='sudo rsync'", "--archive", "--delete", "-z"],
#                rsync__exclude: ["__pycache__/", "*.pyc"]
        end
    end
    # Provisionamiento con ansible
    config.vm.provision :ansible do |ansible|
        ansible.playbook = "./provision/playbook.yml"
    end
end

