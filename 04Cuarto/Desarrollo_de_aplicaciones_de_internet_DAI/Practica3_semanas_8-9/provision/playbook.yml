---
- hosts: all
  remote_user: vagrant
  # gather_facts: False
  environment:
    # Estas son las variables que se utilizan para ejecutar la aplicacion
    # pero setearlas en este punto no sirve de nada por que no es la misma
    # shell en la que se va a realizar la ejecución de los fuentes.
    # hay que asignar las variables en el mismo punto donde se produce
    # la ejecución del programa.
    LC_ALL: 'C.UTF-8'
    LANG: 'C.UTF-8'
  pre_tasks:
    #- debug: msg="{{ ansible_env }}"
    #- debug: msg="{{ lookup('env','USER') }}"
  tasks:
    - name: Upgrade all packages
      become: yes
      dnf:
        name: "*"
        state: latest
    - name: Set timezone to Europe/Madrid
      become: yes
      timezone:
        name: Europe/Madrid
    - name: Install requeriments of disable selinux, and firewalld
      become: yes
      dnf:
        name: ['libselinux-python', 'firewalld']
        state: latest
    - name: Disable SeLinux
      become: yes
      selinux:
        state: disabled
    - name: Stoping FirewallD
      become: yes
      systemd:
        name: firewalld
        state: stopped
    - name: Install Utils for server Linux
      become: yes
      dnf:
        name: ['htop', 'nano', 'net-tools']
        state: latest
    - name: Install dependencies for Django
      become: yes
      dnf:
        name: ['nginx', 'python3-pip', 'python3-pymongo-gridfs']
        state: latest
    - name: Install Django and utils with pip
      become: yes
      pip:
        executable: pip3.6
        name: ['django','django-allauth','djongo','gunicorn']
    - name: Install No-SQL database MongoDB and utils
      become: yes
      dnf:
        name: ['mongodb', 'mongodb-server', 'mongo-tools', 'python3-pymongo']
        state: latest
    - name: Change configuration MongoDB /etc/mongod.conf
      become: yes
      lineinfile:
        path: /etc/mongod.conf
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      with_items:
      - { regexp: 'bindIp: 127\.0\.0\.1', line: '  bindIp: 127.0.0.1' }
      - { regexp: 'ipv6:\s\w+', line: '  ipv6: false' }
    # - name: Copy Source Code to remote machine
    #   copy:
    #     src: ~/GitHub/Universidad/04Cuarto/Desarrollo_de_aplicaciones_de_internet_DAI/Practica3_semanas_8-9/src/
    #     dest: ~/src/
    #     owner: vagrant
    #     group: vagrant
    #     mode: 0744
    - name: Copy config files of daemons the correct place
      become: yes
      copy:
        # remote_src: yes
        # src: "/home/vagrant/src/production/{{ item.src }}"
        src: "~/GitHub/Universidad/04Cuarto/Desarrollo_de_aplicaciones_de_internet_DAI/Practica3_semanas_8-9/src/{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: root
        group: root
        mode: 0755
      with_items:
      - { src: 'production/nginx.conf', dest: '/etc/nginx/nginx.conf'}
      - { src: 'production/gunicorn.service', dest: '/etc/systemd/system/gunicorn.service'}
      - { src: 'production/gunicorn.socket', dest: '/etc/systemd/system/gunicorn.socket'}
      - { src: 'production/gunicorn.conf', dest: '/etc/tmpfiles.d/gunicorn.conf'}
    - name: Create a empty file for log Gunicorn
      become: yes
      copy:
        content: ""
        dest: "/var/log/gunicorn.log"
        owner: vagrant
        group: vagrant
        mode: 0664
    - name: Starting MongoDB Server
      become: yes
      systemd:
        daemon_reload: yes
        enabled: yes
        name: mongod
        state: started
    - name: Starting Nginx Server
      become: yes
      systemd:
        daemon_reload: yes
        enabled: yes
        name: nginx
        state: started
    - name: Starting Gunicorn socket
      become: yes
      systemd:
        daemon_reload: yes
        enabled: yes
        name: gunicorn.socket
        state: started
#     Las siguientes lineas se usan solamente para cuando las variables
#     de entorno que se quieran utilizar van a ser permanentes
    - name: Setting environment vars of system for my app
      become: yes
      lineinfile:
        path: /etc/profile
        create: yes
        line: "{{ item }}"
      with_items:
      - "export MONGODB_HOST={{ lookup('env','MONGODB_HOST') }}"
      - "export MONGODB_PORT={{ lookup('env','MONGODB_PORT') }}"
      - "export DJANGO_REMOTE_ROOT_PATH={{ lookup('env','DJANGO_REMOTE_ROOT_PATH') }}"
      - "export DJANGO_ADMIN_PASS={{ lookup('env','DJANGO_ADMIN_PASS') }}"
      - "export DJANGO_SECRET_KEY='{{ lookup('env','DJANGO_SECRET_KEY') }}'"
      - "export DJANGO_NAME_OF_PROJECT={{ lookup('env','DJANGO_NAME_OF_PROJECT') }}"
      - "export DJANGO_NAME_OF_APP={{ lookup('env','DJANGO_NAME_OF_APP') }}"
      - "export DJANGO_NAME_OF_DBAPP={{ lookup('env','DJANGO_NAME_OF_DBAPP') }}"
      - "export GITHUB_CLIENT_ID_DEV={{ lookup('env','GITHUB_CLIENT_ID_DEV') }}"
      - "export GITHUB_CLIENT_SECRET_DEV={{ lookup('env','GITHUB_CLIENT_SECRET_DEV') }}"
      - "export GOOGLE_CLIENT_ID_DEV={{ lookup('env','GOOGLE_CLIENT_ID_DEV') }}"
      - "export GOOGLE_CLIENT_SECRET_DEV={{ lookup('env','GOOGLE_CLIENT_SECRET_DEV') }}"
      - "export GITHUB_CLIENT_ID_PRO={{ lookup('env','GITHUB_CLIENT_ID_PRO') }}"
      - "export GITHUB_CLIENT_SECRET_PRO={{ lookup('env','GITHUB_CLIENT_SECRET_PRO') }}"
      - "export GOOGLE_CLIENT_ID_PRO={{ lookup('env','GOOGLE_CLIENT_ID_PRO') }}"
      - "export GOOGLE_CLIENT_SECRET_PRO={{ lookup('env','GOOGLE_CLIENT_SECRET_PRO') }}"
    # - name: Create directories for APP
    #   file:
    #     path: "{{ item }}"
    #     state: directory
    #     owner: vagrant
    #     group: vagrant
    #     mode: 0755
    #   with_items:
    #   - "{{ lookup('env','DJANGO_REMOTE_ROOT_PATH') }}"
    # - name: Copy app files to the server
    #   become: yes
    #   copy:
    #     src: "~/GitHub/Universidad/04Cuarto/Desarrollo_de_aplicaciones_de_internet_DAI/Practica3_semanas_8-9/src/{{ item.src }}"
    #     dest: "{{ item.dest }}"
    #     owner: root
    #     group: root
    #     mode: 0755
    #   with_items:
    #   - { src: "restaurants.json", dest: "{{ lookup('env','DJANGO_REMOTE_ROOT_PATH') }}/restaurants.json"}
    #   - { src: "neighborhoods.json", dest: "{{ lookup('env','DJANGO_REMOTE_ROOT_PATH') }}/neighborhoods.json"}